Этот скрипт будет архивировать файлы логов каждые три дня в 00:00.  Он предполагает, что логи находятся в директории `/var/log/mylogs/`.  Замените это на ваш путь к логам.  Скрипт также предполагает, что вы хотите архивировать файлы в формате `.log`.  Если у вас другой формат, измените его в скрипте.

```bash
#!/bin/bash

# Путь к директории с логами
log_dir="/var/log/mylogs/"

# Расширение файлов логов
log_extension=".log"

# Проверка существования директории с логами
if [ ! -d "$log_dir" ]; then
  echo "Ошибка: Директория с логами '$log_dir' не существует."
  exit 1
fi

# Проверка, нужно ли архивировать сегодня
day=$(date +%d)
if (( day % 3 == 0 )); then
  # Получение текущей даты в формате YYYYMMDD
  timestamp=$(date +%Y%m%d)

  # Создание архива
  archive_name="$log_dir/logs_$timestamp.tar.gz"
  tar -czvf "$archive_name" "$log_dir"/*"$log_extension"

  # Вывод сообщения об успешном архивировании
  echo "Логи успешно заархивированы в '$archive_name'"

  # Необязательно: Удаление старых логов (будьте осторожны!)
  # find "$log_dir" -name "*$log_extension" -mtime +7 -delete
  # echo "Старые логи удалены"

else
  echo "Сегодня архивирование не требуется."
fi

exit 0
```

**Как использовать:**

1. **Сохраните скрипт:** Сохраните этот код в файл, например, `archive_logs.sh`.
2. **Сделайте скрипт исполняемым:**  Выполните команду `chmod +x archive_logs.sh`.
3. **Запланируйте выполнение скрипта:** Используйте cron для автоматического запуска скрипта каждый день в 00:00.  Добавьте следующую строку в ваш файл crontab (откройте его с помощью `crontab -e`):

```
0 0 * * * /путь/к/archive_logs.sh
```

Замените `/путь/к/` на фактический путь к вашему скрипту.

**Важные замечания:**

* **Путь к логам:**  Убедитесь, что вы правильно указали путь к директории с вашими логами.
* **Расширение файлов:**  Измените `log_extension` если ваши файлы логов имеют другое расширение (например, `.txt`).
* **Удаление старых логов:**  Раздел с `find` удаляет файлы старше 7 дней.  **Будьте очень осторожны с этой командой**, убедитесь, что вы понимаете, что она делает, прежде чем включать её.  Лучше сначала протестировать её на тестовой среде.
* **Права доступа:** Убедитесь, что пользователь, от имени которого запускается cron, имеет права на чтение и запись в директорию с логами.
* **Размер архивов:**  Регулярное архивирование может привести к накоплению большого количества файлов.  Рассмотрите возможность удаления старых архивов, чтобы управлять дисковым пространством.


Этот улучшенный скрипт обеспечивает более надежное и гибкое архивирование логов.  Перед использованием в продакшене обязательно протестируйте его в тестовой среде.
